/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JFPesquisaFornecedores.java
 *
 * Created on 06/01/2009, 18:00:51
 */
package br.com.seeds;

import Classes.*;
import ClassesDAO.*;
import Excessoes.BancoException;
import java.io.*;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Guilherme
 */
public class PagamentosDetalhesContrato extends javax.swing.JFrame {

    String parametroPesquisa = "";
    String campo;
    int registro = 0;

    /**
     * Creates new form JFPesquisaFornecedores
     */
    public PagamentosDetalhesContrato() throws BancoException, SQLException, ParseException {
        initComponents();
        setLocationRelativeTo(null);
        jLErroAOFiltraContrato.setVisible(false);
        masterTable.getSelectionModel().setSelectionInterval(0, 0);
        jBConcluir.requestFocus();

    }
    private String contratoCliente = "teste não vai aparecer";

    public String getContratoCliente() {
        return contratoCliente;
    }

    public void setContratoCliente(String contratoCliente) {
        this.contratoCliente = contratoCliente;
    }

    public void gravarContrato() throws IOException {
        FileWriter arq2 = new FileWriter("../seeds-java/contratospagamentosaluno.txt");
        PrintWriter gravarArq = new PrintWriter(arq2);
        gravarArq.printf(contratoCliente);
        arq2.close();
    }

    public void concluir() {
        int linha = 0;
        linha = masterTable.getSelectedRow();
        if (linha == -1) {
            linha = 0;
        } else {
            contratoCliente = masterTable.getValueAt(linha, 0).toString();
            try {
                gravarContrato();
            } catch (IOException ex) {
                Logger.getLogger(BuscarClientesContratosExcluir.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                String Codigo = "" + contratoCliente;
                try {
                    ContasReceberContratos SP;
                    SP = new ContasReceberContratos(Integer.parseInt(Codigo));
                    SP.setVisible(true);
                    this.dispose();
                } catch (SQLException ex) {
                    Logger.getLogger(BuscarClientesContratosExcluir.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (BancoException ex) {
                Logger.getLogger(BuscarClientesContratosExcluir.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(BuscarClientesContratosExcluir.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.dispose();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rowSorterToStringConverter1 = new converter.RowSorterToStringConverter();
        buttonGroupImpressoras = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        jBConcluir = new javax.swing.JButton();
        jLErroAOFiltraContrato = new javax.swing.JLabel();

        rowSorterToStringConverter1.setTable(masterTable);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Contas à receber - Contratos");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(249, 249, 249));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel1MouseEntered(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseEntered(evt);
            }
        });

        masterTable.setModel(getDadosTabelaClientePesquisa());
        masterTable.getTableHeader().setReorderingAllowed(false);
        masterTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                masterTableMouseReleased(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                masterTableMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(masterTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                .addContainerGap())
        );

        jBConcluir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jBConcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/entrar.png"))); // NOI18N
        jBConcluir.setText("Concluír");
        jBConcluir.setToolTipText("");
        jBConcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBConcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConcluirActionPerformed(evt);
            }
        });

        jLErroAOFiltraContrato.setForeground(new java.awt.Color(204, 51, 0));
        jLErroAOFiltraContrato.setText("* Todos as parcelas foram carregadas.");
        jLErroAOFiltraContrato.setToolTipText("Não foi possível gerar a parcela específica.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBConcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(256, 256, 256)
                .addComponent(jLErroAOFiltraContrato, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBConcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLErroAOFiltraContrato))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void masterTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masterTableMouseReleased
}//GEN-LAST:event_masterTableMouseReleased

private void jBConcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConcluirActionPerformed
    concluir();
}//GEN-LAST:event_jBConcluirActionPerformed

    private void jScrollPane1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseEntered
        if (registro < 1) {
            JOptionPane.showMessageDialog(rootPane, "O cliente não possuí contrato.\n"
                    + "Você será redirecionado.",
                    "Seeds", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
            try {
                new PagamentosDetalhes().setVisible(true);
            } catch (BancoException ex) {
                Logger.getLogger(PagamentosDetalhesContrato.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(PagamentosDetalhesContrato.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(PagamentosDetalhesContrato.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (registro == 1) {
            concluir();
        }
    }//GEN-LAST:event_jScrollPane1MouseEntered

    private void masterTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masterTableMouseEntered
        if (registro == 1) {
            concluir();
        }
    }//GEN-LAST:event_masterTableMouseEntered

    private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered
        if (registro == 1) {
            concluir();
        }
    }//GEN-LAST:event_jPanel1MouseEntered
    /**
     * @param args the command line arguments
     */
    public DefaultTableModel getDadosTabelaClientePesquisa() {

        String linha;
        String linha2;
        String numerocontrato = "";
        String numeroaluno = "";


        do {
            try {
                FileReader arq = new FileReader("../seeds-java/contratospagamentos.txt");
                FileReader arq2 = new FileReader("../seeds-java/contratospagamentosaluno.txt");

                BufferedReader lerArq = new BufferedReader(arq);
                BufferedReader lerArq2 = new BufferedReader(arq2);

                linha = lerArq.readLine(); // lê a primeira linha
                while (linha != null) {
                    numerocontrato = linha;
                    linha = lerArq.readLine(); // lê da segunda até a última linha
                }
                linha2 = lerArq2.readLine(); // lê a primeira linha
                while (linha2 != null) {
                    numeroaluno = linha2;
                    linha2 = lerArq2.readLine(); // lê da segunda até a última linha
                }

                arq.close();
                arq2.close();


            } catch (IOException e) {
                System.err.printf("Erro na abertura do arquivo: %s.\n",
                        e.getMessage());
            }
        } while (numerocontrato.equals(""));

        try {
            ContratoDAO dao = new ContratoDAO();
            if (numeroaluno.equals("") && numerocontrato.equals("")) {
                jLErroAOFiltraContrato.setVisible(true);
            } else {
                parametroPesquisa = numerocontrato + "";
                campo = numerocontrato;
            }

            List<Contrato> lista = dao.pesquisacontasReFiltroContrato(parametroPesquisa, campo);
            Object[][] dados = new Object[lista.size()][3];

            for (int us = 0; us < lista.size(); us++) {
                dados[us][0] = lista.get(us).getCodigo();
                dados[us][1] = lista.get(us).getCodigo_aluno();
                dados[us][2] = lista.get(us).getLocalidade();
                registro++;
            }

            lista = null;
            dao.desconectar();
            String[] nomeColunas = {"CONTRATO", "Cliente", "Local"};
            return new DefaultTableModel(dados, nomeColunas);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e + "Erro ao construir a tabela.");
            return null;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupImpressoras;
    private javax.swing.JButton jBConcluir;
    private javax.swing.JLabel jLErroAOFiltraContrato;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable masterTable;
    private converter.RowSorterToStringConverter rowSorterToStringConverter1;
    // End of variables declaration//GEN-END:variables
}
