/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.seeds;

import Classes.EntradaSaida;
import Classes.SubProdutos;
import ClassesDAO.EntradaProdutoDAO;
import ClassesDAO.SubProdutosDAO;
import Excessoes.BancoException;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.Time;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Guilherme
 */
public class SaidaProdutos extends javax.swing.JFrame {

    StringBuffer nome = new StringBuffer();
    int apagar = 0;
    private String horaAtual = new SimpleDateFormat().format(new Time(System.currentTimeMillis()));

    /**
     * Creates new form JFPesquisarMateriais
     */
    public SaidaProdutos(String telaPai) {
        initComponents();
        txtQTDE.setDocument(new OnlyNumberField(10));
        setLocation(210, 120);
        jTextField1.requestFocus();
    }
    String parametroPesquisa = "";
    String campo;
    private String nomeCliente = "teste não vai aparecer";
    private int codigoProduto;

    public int getCodigoCliente() {
        return codigoProduto;
    }

    public void setCodigoCliente(int codigoCliente) {
        this.codigoProduto = codigoCliente;
    }

    public void setAcao(ActionListener parametro) {
        //  btnOk.addActionListener(parametro);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        rowSorterToStringConverter1 = new converter.RowSorterToStringConverter();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        txtMarca = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPrecoVenda = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtEstoque = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtEstoqueCritico = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtPrecoCusto = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        txtQTDE = new javax.swing.JTextField();
        btnOk = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        rowSorterToStringConverter1.setTable(masterTable);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Devolução");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(249, 249, 249));

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        masterTable.setModel(getDadosTabelaPesquisa());
        masterTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                masterTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(masterTable);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("Localizar: ");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${rowSorter}"), jTextField1, org.jdesktop.beansbinding.BeanProperty.create("text"), "");
        binding.setConverter(rowSorterToStringConverter1);
        bindingGroup.addBinding(binding);

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(106, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        txtMarca.setEditable(false);
        txtMarca.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMarca.setFocusable(false);
        txtMarca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMarcaKeyTyped(evt);
            }
        });

        jLabel3.setText("Tipo");

        txtPrecoVenda.setEditable(false);
        txtPrecoVenda.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPrecoVenda.setFocusable(false);
        txtPrecoVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPrecoVendaFocusLost(evt);
            }
        });
        txtPrecoVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecoVendaKeyTyped(evt);
            }
        });

        jLabel1.setText("Código");

        txtCodigo.setEditable(false);
        txtCodigo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCodigo.setFocusable(false);

        jLabel12.setText("Nome");

        txtNome.setEditable(false);
        txtNome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNome.setFocusable(false);
        txtNome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtNomeMouseReleased(evt);
            }
        });
        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNomeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomeKeyTyped(evt);
            }
        });

        jLabel4.setText("Estoque");

        txtEstoque.setEditable(false);
        txtEstoque.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtEstoque.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        txtEstoque.setFocusable(false);
        txtEstoque.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEstoqueFocusLost(evt);
            }
        });
        txtEstoque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEstoqueKeyTyped(evt);
            }
        });

        jLabel7.setText("Estoque Crítico");

        txtEstoqueCritico.setEditable(false);
        txtEstoqueCritico.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtEstoqueCritico.setFocusable(false);
        txtEstoqueCritico.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEstoqueCriticoFocusLost(evt);
            }
        });
        txtEstoqueCritico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEstoqueCriticoKeyTyped(evt);
            }
        });

        jLabel8.setText("Preço Custo");

        txtPrecoCusto.setEditable(false);
        txtPrecoCusto.setFocusable(false);
        txtPrecoCusto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPrecoCusto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPrecoCustoFocusLost(evt);
            }
        });
        txtPrecoCusto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecoCustoKeyTyped(evt);
            }
        });

        jLabel14.setText("Preço venda");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(txtMarca)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtEstoqueCritico, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(txtPrecoCusto, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(txtPrecoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(253, 253, 253)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtEstoqueCritico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrecoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrecoCusto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtEstoque, txtMarca});

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jLabel13.setText("* CAMPOS OBRIGATÓRIOS.");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jLabel15.setText("* Quantidade ");

        txtQTDE.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtQTDE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtQTDEKeyPressed(evt);
            }
        });

        btnOk.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/entrar.png"))); // NOI18N
        btnOk.setText("Ok");
        btnOk.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/cancelar.png"))); // NOI18N
        jButton1.setText("Sair");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addComponent(txtQTDE, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnOk, jButton1});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtQTDE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnOk, jButton1});

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel13)
                .addGap(10, 10, 10)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(179, 179, 179))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void masterTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masterTableMouseReleased
        int linha = masterTable.getSelectedRow();
        codigoProduto = masterTable.getValueAt(linha, 0).hashCode();
        nomeCliente = (String) (masterTable.getValueAt(linha, 1));

        apagar = nome.length();//Devolve o número de caracteres do objeto Stringbuffer apagar
        nome.delete(0, apagar);
        nome.append(codigoProduto);

        SubProdutos produto = new SubProdutos();
        try {
            SubProdutosDAO dao = new SubProdutosDAO(); // estou instanciando a conexão
            produto = dao.carregarProdutoPeloCodigo("" + nome);
            if (produto.getNome().equals("nulo")) {
                JOptionPane.showMessageDialog(this, "O produto informado não consta no banco!");
            } else {
                txtCodigo.setText(String.valueOf(produto.getCodigo()));
                txtNome.setText(produto.getNome());
                txtMarca.setText(produto.getCategoria());
                txtEstoque.setText("" + produto.getQuantidade());
                txtEstoqueCritico.setText("" + produto.getQuantidadeMin());
                txtPrecoCusto.setText("" + produto.getPrecoCompra());
                txtPrecoVenda.setText("" + produto.getPrecoVenda());

            }
            produto = null;
            dao.desconectar();
        } catch (BancoException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_masterTableMouseReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        SaidaProdutos.this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        SaidaProdutos.this.dispose();
    }
}//GEN-LAST:event_jTextField1KeyPressed

private void txtMarcaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMarcaKeyTyped
}//GEN-LAST:event_txtMarcaKeyTyped

private void txtPrecoVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPrecoVendaFocusLost
    if (txtPrecoVenda.getText().contains(" ")) {
        txtPrecoVenda.setText(txtPrecoVenda.getText().replace(" ", ""));
    }
    if (txtPrecoVenda.getText().contains("r")) {
        txtPrecoVenda.setText(txtPrecoVenda.getText().replace("r", ""));
    }
    if (txtPrecoVenda.getText().contains("R")) {
        txtPrecoVenda.setText(txtPrecoVenda.getText().replace("R", ""));
    }
    if (txtPrecoVenda.getText().contains("$")) {
        txtPrecoVenda.setText(txtPrecoVenda.getText().replace("$", ""));
    }
    if (txtPrecoVenda.getText().contains(",")) {
        txtPrecoVenda.setText(txtPrecoVenda.getText().replace(",", "."));
    }

    if (Float.parseFloat(txtPrecoCusto.getText()) >= Float.parseFloat(txtPrecoVenda.getText())) {
        int selection = JOptionPane.showConfirmDialog(this,
                "O preço de custo e venda estão corretos?!",
                "Atenção!", JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE);
        if (selection == JOptionPane.CANCEL_OPTION) {
            txtPrecoVenda.setText(" ");
            txtPrecoVenda.requestFocus();
        }
    }
}//GEN-LAST:event_txtPrecoVendaFocusLost

private void txtPrecoVendaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecoVendaKeyTyped
}//GEN-LAST:event_txtPrecoVendaKeyTyped

private void txtNomeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNomeMouseReleased
}//GEN-LAST:event_txtNomeMouseReleased

private void txtNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyPressed
}//GEN-LAST:event_txtNomeKeyPressed

private void txtNomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyTyped
}//GEN-LAST:event_txtNomeKeyTyped

private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
    if (txtEstoque.getText().equals("")) {
        JOptionPane.showMessageDialog(this,
                "Escolha um produto.",
                "Não efetuado!", JOptionPane.WARNING_MESSAGE);
    } else {
        if (txtQTDE.getText().equals("")) {
            JOptionPane.showMessageDialog(this,
                    "Campo quantidade tem que ser informado.",
                    "Não efetuado!", JOptionPane.WARNING_MESSAGE);
        } else {
            SubProdutos produto = new SubProdutos();
            produto.setCodigo(Integer.parseInt(txtCodigo.getText()));
            produto.setNome(txtNome.getText());
            produto.setCategoria(txtMarca.getText());
            apagar = Integer.parseInt(txtEstoque.getText());
            apagar -= Integer.parseInt(txtQTDE.getText());
            produto.setQuantidade(apagar);
            produto.setQuantidadeMin(Integer.parseInt(txtEstoqueCritico.getText()));
            produto.setPrecoVenda(Float.parseFloat(txtPrecoVenda.getText()));
            produto.setPrecoCompra(Float.parseFloat(txtPrecoCusto.getText()));

            try {
                SubProdutosDAO dao = new SubProdutosDAO();
                dao.atualizaDadosProduto(produto);
                produto = null;
                dao.desconectar();
            } catch (BancoException e) {
                e.printStackTrace();
            }
            txtEstoque.setText(apagar + ""); //Para mostrar a QTDE atualizada
            EntradaSaida entrada = new EntradaSaida();
            entrada.setProduto_codigo(Integer.parseInt(txtCodigo.getText()));
            entrada.setData_hora(horaAtual);
            entrada.setTipo("Saída");
            entrada.setQde(Integer.parseInt(txtQTDE.getText()));
            entrada.setPreco(Double.parseDouble(txtPrecoCusto.getText()));

            try {
                EntradaProdutoDAO daos = new EntradaProdutoDAO();
                daos.adicionarProduto(entrada);
                JOptionPane.showMessageDialog(this,
                        "Efetuado com sucesso!",
                        "seeds",
                        JOptionPane.INFORMATION_MESSAGE);
                entrada = null;
                daos.desconectar();
            } catch (BancoException e) {
                e.printStackTrace();
            }
        }
        apagar = 0;
    }
}//GEN-LAST:event_btnOkActionPerformed

private void txtEstoqueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEstoqueFocusLost
    if (txtEstoque.getText().contains(" ")) {
        txtEstoque.setText(txtEstoque.getText().replace(" ", ""));
    }
    if (txtEstoque.getText().contains("r")) {
        txtEstoque.setText(txtEstoque.getText().replace("r", ""));
    }
    if (txtEstoque.getText().contains("R")) {
        txtEstoque.setText(txtEstoque.getText().replace("R", ""));
    }
    if (txtEstoque.getText().contains("$")) {
        txtEstoque.setText(txtEstoque.getText().replace("$", ""));
    }
    if (txtEstoque.getText().contains(",")) {
        txtEstoque.setText(txtEstoque.getText().replace(",", ""));
    }
    if (txtEstoque.getText().contains(".")) {
        txtEstoque.setText(txtEstoque.getText().replace(".", ""));
    }
}//GEN-LAST:event_txtEstoqueFocusLost

private void txtEstoqueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEstoqueKeyTyped
}//GEN-LAST:event_txtEstoqueKeyTyped

private void txtEstoqueCriticoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEstoqueCriticoFocusLost
    if (txtEstoqueCritico.getText().contains(" ")) {
        txtEstoqueCritico.setText(txtEstoqueCritico.getText().replace(" ", ""));
    }
    if (txtEstoqueCritico.getText().contains("r")) {
        txtEstoqueCritico.setText(txtEstoqueCritico.getText().replace("r", ""));
    }
    if (txtEstoqueCritico.getText().contains("R")) {
        txtEstoqueCritico.setText(txtEstoqueCritico.getText().replace("R", ""));
    }
    if (txtEstoqueCritico.getText().contains("$")) {
        txtEstoqueCritico.setText(txtEstoqueCritico.getText().replace("$", ""));
    }
    if (txtEstoqueCritico.getText().contains(",")) {
        txtEstoqueCritico.setText(txtEstoqueCritico.getText().replace(",", ""));
    }
    if (txtEstoqueCritico.getText().contains(".")) {
        txtEstoqueCritico.setText(txtEstoqueCritico.getText().replace(".", ""));
    }
}//GEN-LAST:event_txtEstoqueCriticoFocusLost

private void txtEstoqueCriticoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEstoqueCriticoKeyTyped
}//GEN-LAST:event_txtEstoqueCriticoKeyTyped

private void txtPrecoCustoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPrecoCustoFocusLost
    if (txtPrecoCusto.getText().contains(" ")) {
        txtPrecoCusto.setText(txtPrecoCusto.getText().replace(" ", ""));
    }
    if (txtPrecoCusto.getText().contains("r")) {
        txtPrecoCusto.setText(txtPrecoCusto.getText().replace("r", ""));
    }
    if (txtPrecoCusto.getText().contains("R")) {
        txtPrecoCusto.setText(txtPrecoCusto.getText().replace("R", ""));
    }
    if (txtPrecoCusto.getText().contains("$")) {
        txtPrecoCusto.setText(txtPrecoCusto.getText().replace("$", ""));
    }
    if (txtPrecoCusto.getText().contains(",")) {
        txtPrecoCusto.setText(txtPrecoCusto.getText().replace(",", "."));
    }
}//GEN-LAST:event_txtPrecoCustoFocusLost

private void txtPrecoCustoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecoCustoKeyTyped
}//GEN-LAST:event_txtPrecoCustoKeyTyped

private void txtQTDEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQTDEKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        SaidaProdutos.this.dispose();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        if (txtEstoque.getText().equals("")) {
            JOptionPane.showMessageDialog(this,
                    "Escolha um produto.",
                    "Não efetuado!", JOptionPane.WARNING_MESSAGE);
        } else {
            if (txtQTDE.getText().equals("")) {
                JOptionPane.showMessageDialog(this,
                        "Campo quantidade tem que ser informado.",
                        "Não efetuado!", JOptionPane.WARNING_MESSAGE);
            } else {
                SubProdutos produto = new SubProdutos();
                produto.setCodigo(Integer.parseInt(txtCodigo.getText()));
                produto.setNome(txtNome.getText());
                produto.setCategoria(txtMarca.getText());
                apagar = Integer.parseInt(txtEstoque.getText());
                apagar -= Integer.parseInt(txtQTDE.getText());
                produto.setQuantidade(apagar);
                produto.setQuantidadeMin(Integer.parseInt(txtEstoqueCritico.getText()));
                produto.setPrecoVenda(Float.parseFloat(txtPrecoVenda.getText()));
                produto.setPrecoCompra(Float.parseFloat(txtPrecoCusto.getText()));

                try {
                    SubProdutosDAO dao = new SubProdutosDAO();
                    dao.atualizaDadosProduto(produto);
                    produto = null;
                    dao.desconectar();
                } catch (BancoException e) {
                    e.printStackTrace();
                }
                txtEstoque.setText(apagar + ""); //Para mostrar a QTDE atualizada
                EntradaSaida entrada = new EntradaSaida();
                entrada.setProduto_codigo(Integer.parseInt(txtCodigo.getText()));
                entrada.setData_hora(horaAtual);
                entrada.setTipo("Saída");
                entrada.setQde(Integer.parseInt(txtQTDE.getText()));
                entrada.setPreco(Double.parseDouble(txtPrecoCusto.getText()));

                try {
                    EntradaProdutoDAO daos = new EntradaProdutoDAO();
                    daos.adicionarProduto(entrada);
                    JOptionPane.showMessageDialog(this,
                            "Efetuado com sucesso!",
                            "seeds",
                            JOptionPane.INFORMATION_MESSAGE);
                    entrada = null;
                } catch (BancoException e) {
                    e.printStackTrace();
                }
            }
            apagar = 0;
        }
    }
}//GEN-LAST:event_txtQTDEKeyPressed

    /**
     * @param args the command line arguments
     */
    public DefaultTableModel getDadosTabelaPesquisa() {
        try {

            SubProdutosDAO dao = new SubProdutosDAO();
            List<SubProdutos> lista = dao.pesquisaProduto(parametroPesquisa, campo);
            int numeroContatos = lista.size();
            int numeroColunas = 6;

            Object[][] dados = new Object[numeroContatos][numeroColunas];

            for (int us = 0; us < lista.size(); us++) {
                dados[us][0] = lista.get(us).getCodigo();
                dados[us][1] = lista.get(us).getNome();
                dados[us][2] = lista.get(us).getCategoria();
                dados[us][3] = lista.get(us).getQuantidade();
                dados[us][4] = lista.get(us).getQuantidadeMin();
                dados[us][5] = lista.get(us).getPrecoVenda();
            }
            lista = null;
            dao.desconectar();
            String[] nomeColunas = {"Código", "Nome", "Tipo", "Quantidade", "Quantidade Min.", "Preço"};
            return new DefaultTableModel(dados, nomeColunas);
        } catch (BancoException e) {
            JOptionPane.showMessageDialog(null, e);
            return null;
        }
    }

    public String getNomeCliente() {
        return nomeCliente;
    }

    public void setNomeCliente(String nomeCliente) {
        this.nomeCliente = nomeCliente;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOk;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable masterTable;
    private converter.RowSorterToStringConverter rowSorterToStringConverter1;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtEstoque;
    private javax.swing.JTextField txtEstoqueCritico;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtNome;
    private javax.swing.JFormattedTextField txtPrecoCusto;
    private javax.swing.JTextField txtPrecoVenda;
    private javax.swing.JTextField txtQTDE;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
