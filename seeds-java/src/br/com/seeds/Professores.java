/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Professores.java
 *
 * Created on 09/10/2011, 14:36:49
 */
package br.com.seeds;

import Classes.Professor;
import Classes.verificar_CPF;
import ClassesDAO.ProfessorDAO;
import Excessoes.BancoException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Guilherme Augusto
 */
public class Professores extends javax.swing.JFrame {

    StringBuffer nome = new StringBuffer();
    int apagar = 0;
    int codigo = 0;

    /**
     * Creates new form Professores
     */
    public Professores() throws BancoException {
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/br/com/imagens/FuncionariosFrame.png")).getImage());
        txtCnpj.setVisible(false);
        setLocationRelativeTo(null);

        txtCodigo.setDocument(new LimiteCampos.FixedLengthDocument(11));
        txtCodigo.setDocument(new OnlyNumberField(11));
        txtNome.setDocument(new LimiteCampos.FixedLengthDocument(100));
        txtLogradouro.setDocument(new LimiteCampos.FixedLengthDocument(100));
        txtNumero.setDocument(new LimiteCampos.FixedLengthDocument(10));
        txtComplemento.setDocument(new LimiteCampos.FixedLengthDocument(20));
        txtBairro.setDocument(new LimiteCampos.FixedLengthDocument(60));
        txtContato.setDocument(new LimiteCampos.FixedLengthDocument(100));
        txtEmail.setDocument(new LimiteCampos.FixedLengthDocument(100));

        try {
            ProfessorDAO dao = new ProfessorDAO();
            //Professor professor = new Professor();
            apagar = dao.gerarCodigoProfessor();
            if (apagar > dao.gerarCodigoProfessorExcluido()) {
                txtCodigo.setText("" + apagar);
            } else {
                txtCodigo.setText("" + dao.gerarCodigoProfessorExcluido());
            }
            apagar = 0;
            //professor = null;
            dao.desconectar();
        } catch (BancoException f) {
            f.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtTelefone2 = new javax.swing.JFormattedTextField();
        jFTVisorCPF1 = new javax.swing.JFormattedTextField();
        txtCnpj = new javax.swing.JFormattedTextField();
        txtTelefone1 = new javax.swing.JFormattedTextField();
        jComboBox1 = new javax.swing.JComboBox();
        txtLogradouro = new javax.swing.JTextField();
        txtNumero = new javax.swing.JTextField();
        txtBairro = new javax.swing.JTextField();
        txtComplemento = new javax.swing.JTextField();
        txtContato = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        txtCidade = new javax.swing.JTextField();
        txtCep = new javax.swing.JFormattedTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jBBuscarNome = new javax.swing.JButton();
        jBBuscarCodigo = new javax.swing.JButton();
        txtNome = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jBSalvar = new javax.swing.JButton();
        jBAlterar = new javax.swing.JButton();
        jBExcluir = new javax.swing.JButton();
        jBLimparCampos = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Professores");
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(249, 249, 249));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jLabel6.setText("CEP");

        jLabel5.setText("Complemento");

        jLabel2.setText(" Endereço:");

        jLabel7.setText(" Bairro:");

        jLabel4.setText("Cidade ");

        jLabel3.setText("Número:");

        jLabel15.setText("Telefone 1");

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("2");

        jLabel19.setText("CPF");

        jLabel23.setText("Observação:");

        jLabel24.setText("E-mail:");

        try {
            txtTelefone2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefone2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        try {
            jFTVisorCPF1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFTVisorCPF1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jFTVisorCPF1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFTVisorCPF1KeyPressed(evt);
            }
        });

        try {
            txtCnpj.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCnpj.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCnpj.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCnpjKeyPressed(evt);
            }
        });

        try {
            txtTelefone1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefone1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MG", "AC", "AL", "AP", "AM", "BA", "CE", "DFl", "ES", "GO", "MA", "MT", "MS", "PA", "PI", "RJ", "RN", "RS", "RO", "RE", "SP", "SE", "PB", "PR", "PE", "SC", "TO" }));

        txtLogradouro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtNumero.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtBairro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtComplemento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtContato.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtEmail.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/cpf.png"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtCidade.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        try {
            txtCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCep.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(txtTelefone1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTelefone2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFTVisorCPF1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(txtCnpj))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel5)
                        .addGap(4, 4, 4)
                        .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCep))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCidade))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(txtContato))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(txtLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(txtEmail)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(31, 31, 31))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(txtLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel3))
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel7))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTelefone1)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFTVisorCPF1)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefone2))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel23))
                    .addComponent(txtContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jLabel1.setText("Código");

        jBBuscarNome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/buscar.png"))); // NOI18N
        jBBuscarNome.setToolTipText("Carregar dados do Banco de Dados");
        jBBuscarNome.setBorderPainted(false);
        jBBuscarNome.setContentAreaFilled(false);
        jBBuscarNome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBBuscarNome.setFocusable(false);
        jBBuscarNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarNomeActionPerformed(evt);
            }
        });

        jBBuscarCodigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/buscar.png"))); // NOI18N
        jBBuscarCodigo.setBorderPainted(false);
        jBBuscarCodigo.setContentAreaFilled(false);
        jBBuscarCodigo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBBuscarCodigo.setFocusable(false);
        jBBuscarCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarCodigoActionPerformed(evt);
            }
        });

        txtNome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNomeKeyPressed(evt);
            }
        });

        jLabel8.setText("Nome *");

        txtCodigo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCodigo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodigoFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBBuscarCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(txtNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBBuscarNome, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jBBuscarCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBBuscarNome, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jBSalvar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jBSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/entrar.png"))); // NOI18N
        jBSalvar.setText("Salvar");
        jBSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarActionPerformed(evt);
            }
        });

        jBAlterar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jBAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/view-refresh.png"))); // NOI18N
        jBAlterar.setText("Alterar");
        jBAlterar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarActionPerformed(evt);
            }
        });

        jBExcluir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jBExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/edit-delete.png"))); // NOI18N
        jBExcluir.setText("Excluir");
        jBExcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirActionPerformed(evt);
            }
        });

        jBLimparCampos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jBLimparCampos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/draw-eraser (2).png"))); // NOI18N
        jBLimparCampos.setText("Limpar");
        jBLimparCampos.setToolTipText("Carregar dados do Banco de Dados");
        jBLimparCampos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimparCamposActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jLabel10.setText("* CAMPOS OBRIGATÓRIOS.");

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/revert.png"))); // NOI18N
        jButton2.setText("Inativos");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jBSalvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBAlterar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBExcluir)
                                .addGap(4, 4, 4)
                                .addComponent(jBLimparCampos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBLimparCampos, jBSalvar});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel10)
                .addGap(1, 1, 1)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBLimparCampos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBAlterar, jBExcluir, jBLimparCampos, jBSalvar});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jBLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimparCamposActionPerformed
    txtCodigo.setText("");
    txtNome.setText("");
    txtLogradouro.setText("");
    txtNumero.setText("");
    txtComplemento.setText("");
    txtBairro.setText("");
    txtCidade.setText("");
    txtCep.setText("");
    txtTelefone1.setText("");
    txtTelefone2.setText("");
    jFTVisorCPF1.setText("");
    txtContato.setText("");
    txtEmail.setText("");
    jComboBox1.setSelectedItem("MG");
    try {
        ProfessorDAO dao = new ProfessorDAO();
        // Professor professor = new Professor();
        apagar = dao.gerarCodigoProfessor();
        if (apagar > dao.gerarCodigoProfessorExcluido()) {
            txtCodigo.setText("" + apagar);
        } else {
            txtCodigo.setText("" + dao.gerarCodigoProfessorExcluido());
        }
        apagar = 0;
        //professor = null;
        dao.desconectar();
    } catch (BancoException f) {
        f.printStackTrace();
    }
}//GEN-LAST:event_jBLimparCamposActionPerformed

private void jFTVisorCPF1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTVisorCPF1KeyPressed
}//GEN-LAST:event_jFTVisorCPF1KeyPressed

private void txtCnpjKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCnpjKeyPressed
}//GEN-LAST:event_txtCnpjKeyPressed

private void jBBuscarNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarNomeActionPerformed
    txtNome.setText(txtNome.getText().trim());
    apagar = nome.length();//Devolve o número de caracteres do objeto Stringbuffer apagar
    nome.delete(0, apagar);
    nome.append(txtNome.getText());
    try {
        ProfessorDAO dao = new ProfessorDAO();
        Professor professor = new Professor();
        professor = dao.carregarProfessor(nome);
        if (professor.getNome().equals("nulo")) {
            JOptionPane.showMessageDialog(this,
                    "O professor informado não consta no banco!");
            txtNome.requestFocus();
        } else {
            txtCodigo.setText(String.valueOf(professor.getCodigo()));
            txtNome.setText(professor.getNome());
            txtLogradouro.setText(professor.getEndereco());
            txtNumero.setText(professor.getNumero());
            txtComplemento.setText(professor.getComplemento());
            txtBairro.setText(professor.getBairro());
            txtCidade.setText(professor.getCidade());
            txtCep.setText(professor.getCep());
            txtTelefone1.setText(professor.getTelefone1());
            txtTelefone2.setText(professor.getTelefone2());
            jFTVisorCPF1.setText(professor.getCpf());
            txtCnpj.setText(professor.getCnpj());
            txtContato.setText(professor.getContato());
            txtEmail.setText(professor.getEmail());
        }
        professor = null;
        dao.desconectar();
    } catch (BancoException e) {
        e.printStackTrace();
    }

}//GEN-LAST:event_jBBuscarNomeActionPerformed

private void jBSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarActionPerformed
    txtCodigo.setText(txtCodigo.getText().trim());
    apagar = nome.length();//Devolve o número de caracteres do objeto Stringbuffer apagar
    nome.delete(0, apagar);
    nome.append(txtCodigo.getText());
    try {
        ProfessorDAO dao = new ProfessorDAO();
        Professor professor = new Professor();
        professor = dao.carregarProfessorPeloCodigo(nome);
        if (professor.getNome().equals("nulo")) {
            if (txtCodigo.equals("")) {
                JOptionPane.showMessageDialog(this,
                        "Campo Código não pode ser vazio\n"
                        + "Clique Incluir");
            } else {
                if (txtNome.getText().equals("")) {
                    JOptionPane.showMessageDialog(this,
                            "Campo nome do Professor tem que ser informado!",
                            "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                    txtNome.requestFocus();
                } else {
                    jBSalvar.setEnabled(true);
                    professor.setCodigo(Integer.parseInt(txtCodigo.getText()));
                    txtNome.setText(txtNome.getText().trim());
                    professor.setNome(txtNome.getText());
                    txtLogradouro.setText(txtLogradouro.getText().trim());
                    professor.setEndereco(txtLogradouro.getText());
                    if (txtNumero.getText().equals("")) {
                        professor.setNumero(null);
                    } else {
                        txtNumero.setText(txtNumero.getText().trim());
                        professor.setNumero(txtNumero.getText());
                    }
                    if (txtComplemento.getText().equals("")) {
                    } else {
                        txtComplemento.setText(txtComplemento.getText().trim());
                        professor.setComplemento(txtComplemento.getText());
                    }
                    if (txtCep.getText().equals("     -   ")) {
                        professor.setCep(null);
                    } else {
                        professor.setCep(txtCep.getText());
                    }
                    if (txtTelefone1.getText().equals("(  )     -    ")) {
                        professor.setTelefone1(null);
                    } else {
                        professor.setTelefone1(txtTelefone1.getText());
                    }
                    if (txtTelefone2.getText().equals("(  )     -    ")) {
                        professor.setTelefone2(null);
                    } else {
                        professor.setTelefone2(txtTelefone2.getText());
                    }
                    if (jFTVisorCPF1.getText().equals("   .   .   -  ")) {
                        professor.setCpf(null);
                    } else {
                        professor.setCpf(jFTVisorCPF1.getText());
                    }
                    if (txtCnpj.getText().equals("  .   .   /    -  ")) {
                        professor.setCnpj(null);
                    } else {
                        professor.setCnpj(null);
                    }
                    if (txtContato.getText().equals("")) {
                        professor.setContato(null);
                    } else {
                        txtContato.setText(txtContato.getText().trim());
                        professor.setContato(txtContato.getText());
                    }
                    if (txtEmail.getText().equals("")) {
                        professor.setEmail(null);
                    } else {
                        txtEmail.setText(txtEmail.getText().trim());
                        professor.setEmail(txtEmail.getText());
                    }

                    txtBairro.setText(txtBairro.getText().trim());
                    professor.setBairro(txtBairro.getText());
                    txtCidade.setText(txtCidade.getText().trim());
                    professor.setCidade(txtCidade.getText());

                    try {
                        dao.adicionarProfessor(professor);
                        Professor professorDeletarRegistro = new Professor();
                        professorDeletarRegistro.setCodigo(Integer.parseInt(txtCodigo.getText()));
                        dao.deletarProfessorExcluido(professorDeletarRegistro);

                        JOptionPane.showMessageDialog(this,
                                "Cadastro efetuado com sucesso!");

                        txtCodigo.setText("");
                        txtNome.setText("");
                        txtLogradouro.setText("");
                        txtNumero.setText("");
                        txtComplemento.setText("");
                        txtBairro.setText("");
                        txtCidade.setText("");
                        txtCep.setText("");
                        txtTelefone1.setText("");
                        txtTelefone2.setText("");
                        jFTVisorCPF1.setText("");
                        txtContato.setText("");
                        txtEmail.setText("");
                        try {
                            apagar = dao.gerarCodigoProfessor();
                            if (apagar > dao.gerarCodigoProfessorExcluido()) {
                                txtCodigo.setText("" + apagar);
                            } else {
                                txtCodigo.setText("" + dao.gerarCodigoProfessorExcluido());
                            }
                            apagar = 0;
                        } catch (BancoException f) {
                            f.printStackTrace();
                        }
                        professorDeletarRegistro = null;
                    } catch (BancoException e) {
                        e.printStackTrace();
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this,
                    "O professor informado consta no banco!");
        }
        professor = null;
        dao.desconectar();
    } catch (BancoException e) {
        e.printStackTrace();
    }

}//GEN-LAST:event_jBSalvarActionPerformed

private void jBAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarActionPerformed
    txtCodigo.setText(txtCodigo.getText().trim());
    apagar = nome.length();//Devolve o número de caracteres do objeto Stringbuffer apagar
    nome.delete(0, apagar);
    nome.append(txtCodigo.getText());
    try {
        ProfessorDAO dao = new ProfessorDAO();
        Professor professor = new Professor();
        professor = dao.carregarProfessorPeloCodigo(nome);
        if (professor.getNome().equals("nulo")) {
            JOptionPane.showMessageDialog(this,
                    "O professor informado não consta no banco!");
        } else {
            if (txtCodigo.equals("")) {
                JOptionPane.showMessageDialog(this,
                        "Campo Código não pode ser vazio\n"
                        + "Clique Incluir");
            } else {
                if (txtNome.getText().equals("")) {
                    JOptionPane.showMessageDialog(this,
                            "Campo nome do Professor tem que ser informado!",
                            "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                    txtNome.requestFocus();
                } else {
                    jBSalvar.setEnabled(true);
                    professor.setCodigo(Integer.parseInt(txtCodigo.getText()));
                    txtNome.setText(txtNome.getText().trim());
                    professor.setNome(txtNome.getText());
                    txtLogradouro.setText(txtLogradouro.getText().trim());
                    professor.setEndereco(txtLogradouro.getText());
                    if (txtNumero.getText().equals("")) {
                        professor.setNumero(null);
                    } else {
                        txtNumero.setText(txtNumero.getText().trim());
                        professor.setNumero(txtNumero.getText());
                    }
                    if (txtComplemento.getText().equals("")) {
                    } else {
                        txtComplemento.setText(txtComplemento.getText().trim());
                        professor.setComplemento(txtComplemento.getText());
                    }
                    if (txtCep.getText().equals("     -   ")) {
                        professor.setCep(null);
                    } else {
                        professor.setCep(txtCep.getText());
                    }
                    if (txtTelefone1.getText().equals("(  )     -    ")) {
                        professor.setTelefone1(null);
                    } else {
                        professor.setTelefone1(txtTelefone1.getText());
                    }
                    if (txtTelefone2.getText().equals("(  )     -    ")) {
                        professor.setTelefone2(null);
                    } else {
                        professor.setTelefone2(txtTelefone2.getText());
                    }
                    if (jFTVisorCPF1.getText().equals("   .   .   -  ")) {
                        professor.setCpf(null);
                    } else {
                        professor.setCpf(jFTVisorCPF1.getText());
                    }
                    if (txtCnpj.getText().equals("  .   .   /    -  ")) {
                        professor.setCnpj(null);
                    } else {
                        professor.setCnpj(null);
                    }
                    if (txtContato.getText().equals("")) {
                        professor.setContato(null);
                    } else {
                        txtContato.setText(txtContato.getText().trim());
                        professor.setContato(txtContato.getText());
                    }
                    if (txtEmail.getText().equals("")) {
                        professor.setEmail(null);
                    } else {
                        txtEmail.setText(txtEmail.getText().trim());
                        professor.setEmail(txtEmail.getText());
                    }

                    txtBairro.setText(txtBairro.getText().trim());
                    professor.setBairro(txtBairro.getText());
                    txtCidade.setText(txtCidade.getText().trim());
                    professor.setCidade(txtCidade.getText());

                    try {
                        dao.atualizaDados(professor);
                        JOptionPane.showMessageDialog(this,
                                "Atualização efetuada com sucesso!");
                    } catch (BancoException e) {
                        e.printStackTrace();
                    }
                }
            }
        }
        professor = null;
        dao.desconectar();
    } catch (BancoException e) {
        e.printStackTrace();
    }
}//GEN-LAST:event_jBAlterarActionPerformed

private void jBExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirActionPerformed
    txtCodigo.setText(txtCodigo.getText().trim());
    apagar = nome.length();//Devolve o número de caracteres do objeto Stringbuffer apagar
    nome.delete(0, apagar);
    nome.append(txtCodigo.getText());
    try {
        ProfessorDAO dao = new ProfessorDAO();
        Professor professor = new Professor();
        professor = dao.carregarProfessorPeloCodigo(nome);
        if (professor.getNome().equals("nulo")) {
            JOptionPane.showMessageDialog(this,
                    "O professor informado não consta no banco!");
        } else {
            int selection = JOptionPane.showConfirmDialog(this,
                    "Deseja excluir o registro?",
                    "seeds", JOptionPane.OK_CANCEL_OPTION,
                    JOptionPane.QUESTION_MESSAGE);
            if (selection == JOptionPane.OK_OPTION) {
                if (txtCodigo.equals("")) {
                    JOptionPane.showMessageDialog(this,
                            "Campo Código não pode ser vazio\n"
                            + "Clique Incluir");
                } else {
                    txtNome.setText(txtNome.getText().trim());
                    professor.setNome(txtNome.getText());
                    txtLogradouro.setText(txtLogradouro.getText().trim());
                    professor.setEndereco(txtLogradouro.getText());
                    if (txtNumero.getText().equals("")) {
                        professor.setNumero(null);
                    } else {
                        txtNumero.setText(txtNumero.getText().trim());
                        professor.setNumero(txtNumero.getText());
                    }
                    if (txtComplemento.getText().equals("")) {
                    } else {
                        txtComplemento.setText(txtComplemento.getText().trim());
                        professor.setComplemento(txtComplemento.getText());
                    }
                    if (txtCep.getText().equals("     -   ")) {
                        professor.setCep(null);
                    } else {
                        professor.setCep(txtCep.getText());
                    }
                    if (txtTelefone1.getText().equals("(  )     -    ")) {
                        professor.setTelefone1(null);
                    } else {
                        professor.setTelefone1(txtTelefone1.getText());
                    }
                    if (txtTelefone2.getText().equals("(  )     -    ")) {
                        professor.setTelefone2(null);
                    } else {
                        professor.setTelefone2(txtTelefone2.getText());
                    }
                    if (jFTVisorCPF1.getText().equals("   .   .   -  ")) {
                        professor.setCpf(null);
                    } else {
                        professor.setCpf(jFTVisorCPF1.getText());
                    }
                    if (txtCnpj.getText().equals("  .   .   /    -  ")) {
                        professor.setCnpj(null);
                    } else {
                        professor.setCnpj(null);
                    }
                    if (txtContato.getText().equals("")) {
                        professor.setContato(null);
                    } else {
                        txtContato.setText(txtContato.getText().trim());
                        professor.setContato(txtContato.getText());
                    }
                    if (txtEmail.getText().equals("")) {
                        professor.setEmail(null);
                    } else {
                        txtEmail.setText(txtEmail.getText().trim());
                        professor.setEmail(txtEmail.getText());
                    }

                    txtBairro.setText(txtBairro.getText().trim());
                    professor.setBairro(txtBairro.getText());
                    txtCidade.setText(txtCidade.getText().trim());
                    professor.setCidade(txtCidade.getText());

                    dao.adicionarProfessorExcluido(professor);
                    professor = null;
                    Professor professorDeletarRegistro = new Professor();
                    professorDeletarRegistro.setCodigo(Integer.parseInt(txtCodigo.getText()));
                    try {
                        dao.deletarProfessor(professorDeletarRegistro);
                        JOptionPane.showMessageDialog(this,
                                "Atualização efetuada com sucesso!",
                                "seeds",
                                JOptionPane.INFORMATION_MESSAGE);
                        professorDeletarRegistro = null;
                    } catch (BancoException e) {
                        e.printStackTrace();
                    }
                    txtCodigo.setText("");
                    txtNome.setText("");
                    txtLogradouro.setText("");
                    txtNumero.setText("");
                    txtComplemento.setText("");
                    txtBairro.setText("");
                    txtCidade.setText("");
                    txtCep.setText("");
                    txtTelefone1.setText("");
                    txtTelefone2.setText("");
                    jFTVisorCPF1.setText("");
                    txtContato.setText("");
                    txtEmail.setText("");
                    jComboBox1.setSelectedItem("MG");
                    try {
                        apagar = dao.gerarCodigoProfessor();
                        if (apagar > dao.gerarCodigoProfessorExcluido()) {
                            txtCodigo.setText("" + apagar);
                        } else {
                            txtCodigo.setText("" + dao.gerarCodigoProfessorExcluido());
                        }
                        apagar = 0;
                    } catch (BancoException f) {
                        f.printStackTrace();
                    }
                }
            }
        }
        dao.desconectar();
        professor = null;
    } catch (BancoException e) {
        e.printStackTrace();
    }
}//GEN-LAST:event_jBExcluirActionPerformed

private void jBBuscarCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarCodigoActionPerformed
    try {
        ProfessorDAO dao = new ProfessorDAO();
        //Professor professor = new Professor();
        if (dao.gerarCodigoProfessor() == 1) {
            JOptionPane.showMessageDialog(this,
                    "O sistema não possuí um professor cadastrado.",
                    "seeds",
                    JOptionPane.QUESTION_MESSAGE);
            txtNome.requestFocus();
        } else {
            final BuscarProfessores pesq = new BuscarProfessores("Professores");
            pesq.setVisible(true);

            ActionListener acaoOk = new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    StringBuffer codigoProfessor = new StringBuffer();
                    codigoProfessor.append(pesq.getCodigoProfessor());
                    try {
                        ProfessorDAO dao = new ProfessorDAO();
                        Professor professor = new Professor();
                        professor = dao.carregarProfessorPeloCodigo(codigoProfessor);
                        txtCodigo.setText(String.valueOf(professor.getCodigo()));
                        txtNome.setText(professor.getNome());
                        txtLogradouro.setText(professor.getEndereco());
                        txtNumero.setText(professor.getNumero());
                        txtComplemento.setText(professor.getComplemento());
                        txtBairro.setText(professor.getBairro());
                        txtCidade.setText(professor.getCidade());
                        txtCep.setText(professor.getCep());
                        txtTelefone1.setText(professor.getTelefone1());
                        txtTelefone2.setText(professor.getTelefone2());
                        jFTVisorCPF1.setText(professor.getCpf());
                        txtContato.setText(professor.getContato());
                        txtEmail.setText(professor.getEmail());
                        dao.desconectar();
                        professor = null;
                    } catch (BancoException b) {
                        JOptionPane.showMessageDialog(null, e);
                    }
                    pesq.dispose();
                }
            };
            pesq.setAcao(acaoOk);
        }
        dao.desconectar();
    } catch (BancoException ex) {
        Logger.getLogger(Professores.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_jBBuscarCodigoActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    verificarCPF();
}//GEN-LAST:event_jButton1ActionPerformed

    private void txtNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            Professores.this.dispose();
        }
    }//GEN-LAST:event_txtNomeKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            ProfessorDAO dao = new ProfessorDAO();
            //Professor professor = new Professor();
            if (dao.gerarCodigoProfessorExcluido() == 1) {
                JOptionPane.showMessageDialog(this,
                        "O sistema não possuí professor inativo.",
                        "seeds",
                        JOptionPane.QUESTION_MESSAGE);
                txtNome.requestFocus();
            } else {
                final BuscarProfessoresExcluido pesq = new BuscarProfessoresExcluido("Professores Excluídos");
                pesq.setVisible(true);

                ActionListener acaoOk = new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        StringBuffer codigoProfessor = new StringBuffer();
                        codigoProfessor.append(pesq.getCodigoProfessor());
                        try {
                            ProfessorDAO dao = new ProfessorDAO();
                            Professor professor = new Professor();
                            professor = dao.carregarProfessorExcluidoPeloCodigo(codigoProfessor);
                            txtCodigo.setText(String.valueOf(professor.getCodigo()));
                            txtNome.setText(professor.getNome());
                            txtLogradouro.setText(professor.getEndereco());
                            txtNumero.setText(professor.getNumero());
                            txtComplemento.setText(professor.getComplemento());
                            txtBairro.setText(professor.getBairro());
                            txtCidade.setText(professor.getCidade());
                            txtCep.setText(professor.getCep());
                            txtTelefone1.setText(professor.getTelefone1());
                            txtTelefone2.setText(professor.getTelefone2());
                            jFTVisorCPF1.setText(professor.getCpf());
                            txtContato.setText(professor.getContato());
                            txtEmail.setText(professor.getEmail());
                            dao.desconectar();
                            professor = null;
                        } catch (BancoException b) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                        pesq.dispose();
                    }
                };
                pesq.setAcao(acaoOk);
            }
            dao.desconectar();
        } catch (BancoException ex) {
            Logger.getLogger(Professores.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtCodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodigoFocusLost
        if (txtCodigo.getText().equals("")) {
            try {
                ProfessorDAO dao = new ProfessorDAO();
                //Professor professor = new Professor();
                apagar = dao.gerarCodigoProfessor();
                if (apagar > dao.gerarCodigoProfessorExcluido()) {
                    txtCodigo.setText("" + apagar);
                } else {
                    txtCodigo.setText("" + dao.gerarCodigoProfessorExcluido());
                }
                apagar = 0;
                dao.desconectar();
            } catch (BancoException f) {
                f.printStackTrace();
            }
        }
    }//GEN-LAST:event_txtCodigoFocusLost
    public void verificarCPF() {
        try {
            String cpf = jFTVisorCPF1.getText();
            verificar_CPF documento = new verificar_CPF();
            documento.setCpf(cpf);
            documento.verificando();
            jFTVisorCPF1.requestFocus();
        } catch (Exception e) {
            e.getMessage();
        }
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAlterar;
    private javax.swing.JButton jBBuscarCodigo;
    private javax.swing.JButton jBBuscarNome;
    private javax.swing.JButton jBExcluir;
    private javax.swing.JButton jBLimparCampos;
    private javax.swing.JButton jBSalvar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JFormattedTextField jFTVisorCPF1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JFormattedTextField txtCep;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JFormattedTextField txtCnpj;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtComplemento;
    private javax.swing.JTextField txtContato;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtLogradouro;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JFormattedTextField txtTelefone1;
    private javax.swing.JFormattedTextField txtTelefone2;
    // End of variables declaration//GEN-END:variables
}
