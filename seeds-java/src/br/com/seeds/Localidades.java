/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.seeds;

import Classes.Localidade;
import ClassesDAO.LocalidadeDAO;
import Excessoes.BancoException;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Guilherme
 */
public class Localidades extends javax.swing.JFrame {

    /**
     * Creates new form JFLocalidade
     */
    public Localidades() throws BancoException {
        initComponents();
        setLocationRelativeTo(null);
        txtBuscarPeloCode.requestFocus();
        JBExcluir.setEnabled(false);
        JBAlterar.setEnabled(false);
        jCBSituacao.setEnabled(false);
        jCBCidade.setSelectedItem("Montes Claros");
        txtNumero.setDocument(new LimiteCampos.FixedLengthDocument(10));
        txtBairro.setDocument(new LimiteCampos.FixedLengthDocument(100));
        txtComplemento.setDocument(new LimiteCampos.FixedLengthDocument(60));
        txtLogradouro.setDocument(new LimiteCampos.FixedLengthDocument(100));
        txtBuscarPeloCode.setDocument(new LimiteCampos.FixedLengthDocument(11));
        txtBuscarPeloCode.setDocument(new OnlyNumberField(11));
        txtCodigo.setDocument(new OnlyNumberField(11));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        txtBairro = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jCBCidade = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtLogradouro = new javax.swing.JTextField();
        txtNumero = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtComplemento = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtCep = new javax.swing.JFormattedTextField();
        jCBSituacao = new javax.swing.JComboBox();
        jBSalvar = new javax.swing.JButton();
        JBIncluir = new javax.swing.JButton();
        JBAlterar = new javax.swing.JButton();
        JBExcluir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        txtBuscarPeloCode = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nova Localidade");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(249, 249, 249));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        txtBairro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtBairro.setEnabled(false);
        txtBairro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtBairroMouseReleased(evt);
            }
        });
        txtBairro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBairroKeyTyped(evt);
            }
        });

        jLabel1.setText("Bairro");
        jLabel1.setToolTipText("Campo obrigat√≥rio");

        jCBCidade.setEditable(true);
        jCBCidade.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jCBCidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Abadia dos Dourados", "Abaete", "Abre Campo", "Acaiaca", "Acucena", "Agua Boa", "Agua Comprida", "Aguanil", "Aguas Formosas", "Aguas Vermelhas", "Aimores", "Aiuruoca", "Alagoa", "Albertina", "Alem Paraiba", "Alfenas", "Alfredo Vasconcelos", "Almenara", "Alpercata", "Alpinopolis", "Alterosa", "Alto Caparao", "Alto Jequitiba", "Alto Rio Doce", "Alvarenga", "Alvinopolis", "Alvorada de Minas", "Amparo do Serra", "Andradas", "Andrelandia", "Angelandia", "Antonio Carlos", "Antonio Dias", "Antonio Prado de Minas", "Aracai", "Aracitaba", "Aracuai", "Araguari", "Arantina", "Araponga", "Arapora", "Arapua", "Araujos", "Araxa", "Arceburgo", "Arcos", "Areado", "Argirita", "Aricanduva", "Arinos", "Astolfo Dutra", "Ataleia", "Augusto de Lima", "Baependi", "Baldim", "Bambui", "Bandeira do Sul", "Bandeira", "Barao de Cocais", "Barao de Monte Alto", "Barbacena", "Barra Longa", "Barroso", "Bela Vista de Minas", "Belmiro Braga", "Belo Horizonte", "Belo Oriente", "Belo Vale", "Berilo", "Berizal", "Bertopolis", "Betim", "Bias Fortes", "Bicas", "Biquinhas", "Boa Esperanca", "Bocaina de Minas", "Bocaiuva", "Bom Despacho", "Bom Jardim de Minas", "Bom Jesus da Penha", "Bom Jesus do Amparo", "Bom Jesus do Galho", "Bom Repouso", "Bom Sucesso", "Bonfim", "Bonfinopolis de Minas", "Bonito de Minas", "Borda da Mata", "Botelhos", "Botumirim", "Bras Pires", "Brasilandia de Minas", "Brasilia de Minas", "Brasopolis", "Braunas", "Brumadinho", "Bueno Brandao", "Buenopolis", "Bugre", "Buritis", "Buritizeiro", "Cabeceira Grande", "Cabo Verde", "Cachoeira Dourada", "Cachoeira da Prata", "Cachoeira de Minas", "Cachoeira de Pajeu", "Caetanopolis", "Caete", "Caiana", "Cajuri", "Caldas", "Camacho", "Camanducaia", "Cambui", "Cambuquira", "Campanario", "Campanha", "Campestre", "Campina Verde", "Campo Azul", "Campo Belo", "Campo Florido", "Campo do Meio", "Campos Altos", "Campos Gerais", "Cana Verde", "Canaa", "Canapolis", "Candeias", "Cantagalo", "Caparao", "Capela Nova", "Capelinha", "Capetinga", "Capim Branco", "Capinopolis", "Capitao Andrade", "Capitao Eneas", "Capitolio", "Caputira", "Carai", "Caranaiba", "Carandai", "Carangola", "Caratinga", "Carbonita", "Careacu", "Carlos Chagas", "Carmesia", "Carmo da Cachoeira", "Carmo da Mata", "Carmo de Minas", "Carmo do Cajuru", "Carmo do Paranaiba", "Carmo do Rio Claro", "Carmopolis de Minas", "Carneirinho", "Carrancas", "Carvalhopolis", "Carvalhos", "Casa Grande", "Cascalho Rico", "Cassia", "Cataguases", "Catas Altas da Noruega", "Catas Altas", "Catuji", "Catuti", "Caxambu", "Cedro do Abaete", "Central de Minas", "Centralina", "Chacara", "Chale", "Chapada Gaucha", "Chapada do Norte", "Chiador", "Cipotanea", "Claraval", "Claro dos Pocoes", "Claudio", "Coimbra", "Coluna", "Comendador Gomes", "Comercinho", "Conceicao da Aparecida", "Conceicao da Barra de Minas", "Conceicao das Alagoas", "Conceicao das Pedras", "Conceicao de Ipanema", "Conceicao do Mato Dentro", "Conceicao do Para", "Conceicao do Rio Verde", "Conceicao dos Ouros", "Conego Marinho", "Confins", "Congonhal", "Congonhas do Norte", "Congonhas", "Conquista", "Conselheiro Lafaiete", "Conselheiro Pena", "Consolacao", "Contagem", "Coqueiral", "Coracao de Jesus", "Cordisburgo", "Cordislandia", "Corinto", "Coroaci", "Coromandel", "Coronel Fabriciano", "Coronel Murta", "Coronel Pacheco", "Coronel Xavier Chaves", "Corrego Danta", "Corrego Fundo", "Corrego Novo", "Corrego do Bom Jesus", "Couto de Magalhaes de Minas", "Crisolita", "Cristais", "Cristalia", "Cristiano Otoni", "Cristina", "Crucilandia", "Cruzeiro da Fortaleza", "Cruzilia", "Cuparaque", "Curral de Dentro", "Curvelo", "Datas", "Delfim Moreira", "Delfinopolis", "Delta", "Descoberto", "Desterro de Entre Rios", "Desterro do Melo", "Diamantina", "Diogo de Vasconcelos", "Dionisio", "Divinesia", "Divino das Laranjeiras", "Divino", "Divinolandia de Minas", "Divinopolis", "Divisa Alegre", "Divisa Nova", "Divisopolis", "Dom Bosco", "Dom Cavati", "Dom Joaquim", "Dom Silverio", "Dom Vicoso", "Dona Euzebia", "Dores de Campos", "Dores de Guanhaes", "Dores do Indaia", "Dores do Turvo", "Doresopolis", "Douradoquara", "Durande", "Eloi Mendes", "Engenheiro Caldas", "Engenheiro Navarro", "Entre Folhas", "Entre Rios de Minas", "Ervalia", "Esmeraldas", "Espera Feliz", "Espinosa", "Espirito Santo do Dourado", "Estiva", "Estrela Dalva", "Estrela do Indaia", "Estrela do Sul", "Eugenopolis", "Ewbank da Camara", "Extrema", "Fama", "Faria Lemos", "Felicio dos Santos", "Felisburgo", "Felixlandia", "Fernandes Tourinho", "Ferros", "Fervedouro", "Florestal", "Formiga", "Formoso", "Fortaleza de Minas", "Fortuna de Minas", "Francisco Badaro", "Francisco Dumont", "Francisco Sa", "Franciscopolis", "Frei Gaspar", "Frei Inocencio", "Frei Lagonegro", "Fronteira dos Vales", "Fronteira", "Fruta de Leite", "Frutal", "Funilandia", "Galileia", "Gameleiras", "Glaucilandia", "Goiabeira", "Goiana", "Goncalves", "Gonzaga", "Gouvea", "Governador Valadares", "Grao Mogol", "Grupiara", "Guanhaes", "Guape", "Guaraciaba", "Guaraciama", "Guaranesia", "Guarani", "Guarara", "Guarda-Mor", "Guaxupe", "Guidoval", "Guimarania", "Guiricema", "Gurinhata", "Heliodora", "Iapu", "Ibertioga", "Ibia", "Ibiai", "Ibiracatu", "Ibiraci", "Ibirite", "Ibitiura de Minas", "Ibituruna", "Icarai de Minas", "Igarape", "Igaratinga", "Iguatama", "Ijaci", "Ilicinea", "Imbe de Minas", "Inconfidentes", "Indaiabira", "Indianopolis", "Ingai", "Inhapim", "Inhauma", "Inimutaba", "Ipaba", "Ipanema", "Ipatinga", "Ipiacu", "Ipuiuna", "Irai de Minas", "Itabira", "Itabirinha de Mantena", "Itabirito", "Itacambira", "Itacarambi", "Itaguara", "Itaipe", "Itajuba", "Itamarandiba", "Itamarati de Minas", "Itambacuri", "Itambe do Mato Dentro", "Itamogi", "Itamonte", "Itanhandu", "Itanhomi", "Itaobim", "Itapagipe", "Itapecerica", "Itapeva", "Itatiaiucu", "Itau de Minas", "Itauna", "Itaverava", "Itinga", "Itueta", "Ituiutaba", "Itumirim", "Iturama", "Itutinga", "Jaboticatubas", "Jacinto", "Jacui", "Jacutinga", "Jaguaracu", "Jaiba", "Jampruca", "Janauba", "Januaria", "Japaraiba", "Japonvar", "Jeceaba", "Jenipapo de Minas", "Jequeri", "Jequitai", "Jequitiba", "Jequitinhonha", "Jesuania", "Joaima", "Joanesia", "Joao Monlevade", "Joao Pinheiro", "Joaquim Felicio", "Jordania", "Jose Goncalves de Minas", "Jose Raydan", "Josenopolis", "Juatuba", "Juiz de Fora", "Juramento", "Juruaia", "Juvenilia", "Ladainha", "Lagamar", "Lagoa Dourada", "Lagoa Formosa", "Lagoa Grande", "Lagoa Santa", "Lagoa da Prata", "Lagoa dos Patos", "Lagoas", "Lajinha", "Lambari", "Lamim", "Laranjal", "Lassance", "Lavras", "Leandro Ferreira", "Leme do Prado", "Leopoldina", "Liberdade", "Lima Duarte", "Limeira do Oeste", "Lontra", "Luisburgo", "Luislandia", "Luminarias", "Luz", "Machacalis", "Machado", "Madre de Deus de Minas", "Malacacheta", "Mamonas", "Manga", "Manhuacu", "Manhumirim", "Mantena", "Mar de Espanha", "Maravilhas", "Maria da Fe", "Mariana", "Marilac", "Mario Campos", "Maripa de Minas", "Marlieria", "Marmelopolis", "Martinho Campos", "Martins Soares", "Mata Verde", "Materlandia", "Mateus Leme", "Mathias Lobato", "Matias Barbosa", "Matias Cardoso", "Matipo", "Mato Verde", "Matozinhos", "Matutina", "Medeiros", "Medina", "Mendes Pimentel", "Merces", "Mesquita", "Minas Novas", "Minduri", "Mirabela", "Miradouro", "Mirai", "Miravania", "Moeda", "Moema", "Monjolos", "Monsenhor Paulo", "Montalvania", "Monte Alegre de Minas", "Monte Azul", "Monte Belo", "Monte Carmelo", "Monte Formoso", "Monte Santo de Minas", "Monte Siao", "Montes Claros", "Montezuma", "Morada Nova de Minas", "Morro da Garca", "Morro do Pilar", "Munhoz", "Muriae", "Mutum", "Muzambinho", "Nacip Raydan", "Nanuque", "Naque", "Natalandia", "Natercia", "Nazareno", "Nepomuceno", "Ninheira", "Nova Belem", "Nova Era", "Nova Lima", "Nova Modica", "Nova Ponte", "Nova Porteirinha", "Nova Resende", "Nova Serrana", "Nova Uniao", "Novo Cruzeiro", "Novo Oriente de Minas", "Novorizonte", "Olaria", "Olhos-d'Agua", "Olimpio Noronha", "Oliveira Fortes", "Oliveira", "Onca de Pitangui", "Oratorios", "Orizania", "Ouro Branco", "Ouro Fino", "Ouro Preto", "Ouro Verde de Minas", "Padre Carvalho", "Padre Paraiso", "Pai Pedro", "Paineiras", "Pains", "Paiva", "Palma", "Palmopolis", "Papagaios", "Para de Minas", "Paracatu", "Paraguacu", "Paraisopolis", "Paraopeba", "Passa Quatro", "Passa Tempo", "Passa Vinte", "Passabem", "Passos", "Patis", "Patos de Minas", "Patrocinio do Muriae", "Patrocinio", "Paula Candido", "Paulistas", "Pavao", "Pecanha", "Pedra Azul", "Pedra Bonita", "Pedra Dourada", "Pedra do Anta", "Pedra do Indaia", "Pedralva", "Pedras de Maria da Cruz", "Pedrinopolis", "Pedro Leopoldo", "Pedro Teixeira", "Pequeri", "Pequi", "Perdigao", "Perdizes", "Perdoes", "Periquito", "Pescador", "Piau", "Piedade de Caratinga", "Piedade de Ponte Nova", "Piedade do Rio Grande", "Piedade dos Gerais", "Pimenta", "Pingo d'Agua", "Pintopolis", "Piracema", "Pirajuba", "Piranga", "Pirangucu", "Piranguinho", "Pirapetinga", "Pirapora", "Pirauba", "Pitangui", "Piui", "Planura", "Poco Fundo", "Pocos de Caldas", "Pocrane", "Pompeu", "Ponte Nova", "Ponto Chique", "Ponto dos Volantes", "Porteirinha", "Porto Firme", "Pote", "Pouso Alegre", "Pouso Alto", "Prados", "Prata", "Pratapolis", "Pratinha", "Presidente Bernardes", "Presidente Juscelino", "Presidente Kubitschek", "Presidente Olegario", "Prudente de Morais", "Quartel Geral", "Queluzita", "Raposos", "Raul Soares", "Recreio", "Reduto", "Resende Costa", "Resplendor", "Ressaquinha", "Riachinho", "Riacho dos Machados", "Ribeirao Vermelho", "Ribeirao das Neves", "Rio Acima", "Rio Casca", "Rio Doce", "Rio Espera", "Rio Manso", "Rio Novo", "Rio Paranaiba", "Rio Pardo de Minas", "Rio Piracicaba", "Rio Pomba", "Rio Preto", "Rio Vermelho", "Rio do Prado", "Ritapolis", "Rochedo de Minas", "Rodeiro", "Romaria", "Rosario da Limeira", "Rubelita", "Rubim", "Sabara", "Sabinopolis", "Sacramento", "Salinas", "Salto da Divisa", "Santa Barbara do Leste", "Santa Barbara do Monte Verde", "Santa Barbara do Tugurio", "Santa Barbara", "Santa Cruz de Minas", "Santa Cruz de Salinas", "Santa Cruz do Escalvado", "Santa Efigenia de Minas", "Santa Fe de Minas", "Santa Helena de Minas", "Santa Juliana", "Santa Luzia", "Santa Margarida", "Santa Maria de Itabira", "Santa Maria do Salto", "Santa Maria do Suacui", "Santa Rita de Caldas", "Santa Rita de Ibitipoca", "Santa Rita de Jacutinga", "Santa Rita de Minas", "Santa Rita do Itueto", "Santa Rita do Sapucai", "Santa Rosa da Serra", "Santa Vitoria", "Santana da Vargem", "Santana de Cataguases", "Santana de Pirapama", "Santana do Deserto", "Santana do Garambeu", "Santana do Jacare", "Santana do Manhuacu", "Santana do Paraiso", "Santana do Riacho", "Santana dos Montes", "Santo Antonio do Amparo", "Santo Antonio do Aventureiro", "Santo Antonio do Grama", "Santo Antonio do Itambe", "Santo Antonio do Jacinto", "Santo Antonio do Monte", "Santo Antonio do Retiro", "Santo Antonio do Rio Abaixo", "Santo Hipolito", "Santos Dumont", "Sao Bento Abade", "Sao Bras do Suacui", "Sao Domingos das Dores", "Sao Domingos do Prata", "Sao Felix de Minas", "Sao Francisco de Paula", "Sao Francisco de Sales", "Sao Francisco do Gloria", "Sao Francisco", "Sao Geraldo da Piedade", "Sao Geraldo do Baixio", "Sao Geraldo", "Sao Goncalo do Abaete", "Sao Goncalo do Para", "Sao Goncalo do Rio Abaixo", "Sao Goncalo do Rio Preto", "Sao Goncalo do Sapucai", "Sao Gotardo", "Sao Joao Batista do Gloria", "Sao Joao Evangelista", "Sao Joao Nepomuceno", "Sao Joao da Lagoa", "Sao Joao da Mata", "Sao Joao da Ponte", "Sao Joao das Missoes", "Sao Joao del Rei", "Sao Joao do Manhuacu", "Sao Joao do Manteninha", "Sao Joao do Oriente", "Sao Joao do Pacui", "Sao Joao do Paraiso", "Sao Joaquim de Bicas", "Sao Jose da Barra", "Sao Jose da Lapa", "Sao Jose da Safira", "Sao Jose da Varginha", "Sao Jose do Alegre", "Sao Jose do Divino", "Sao Jose do Goiabal", "Sao Jose do Jacuri", "Sao Jose do Mantimento", "Sao Lourenco", "Sao Miguel do Anta", "Sao Pedro da Uniao", "Sao Pedro do Suacui", "Sao Pedro dos Ferros", "Sao Romao", "Sao Roque de Minas", "Sao Sebastiao da Bela Vista", "Sao Sebastiao da Vargem Alegre", "Sao Sebastiao do Anta", "Sao Sebastiao do Maranhao", "Sao Sebastiao do Oeste", "Sao Sebastiao do Paraiso", "Sao Sebastiao do Rio Preto", "Sao Sebastiao do Rio Verde", "Sao Thome das Letras", "Sao Tiago", "Sao Tomas de Aquino", "Sao Vicente de Minas", "Sapucai-Mirim", "Sardoa", "Sarzedo", "Sem-Peixe", "Senador Amaral", "Senador Cortes", "Senador Firmino", "Senador Jose Bento", "Senador Modestino Goncalves", "Senhora de Oliveira", "Senhora do Porto", "Senhora dos Remedios", "Sericita", "Seritinga", "Serra Azul de Minas", "Serra da Saudade", "Serra do Salitre", "Serra dos Aimores", "Serrania", "Serranopolis de Minas", "Serranos", "Serro", "Sete Lagoas", "Setubinha", "Silveirania", "Silvianopolis", "Simao Pereira", "Simonesia", "Sobralia", "Soledade de Minas", "Tabuleiro", "Taiobeiras", "Taparuba", "Tapira", "Tapirai", "Taquaracu de Minas", "Tarumirim", "Teixeiras", "Teofilo Otoni", "Timoteo", "Tiradentes", "Tiros", "Tocantins", "Tocos do Moji", "Toledo", "Tombos", "Tres Coracoes", "Tres Marias", "Tres Pontas", "Tumiritinga", "Tupaciguara", "Turmalina", "Turvolandia", "Uba", "Ubai", "Ubaporanga", "Uberaba", "Uberlandia", "Umburatiba", "Unai", "Uniao de Minas", "Uruana de Minas", "Urucania", "Urucuia", "Vargem Alegre", "Vargem Bonita", "Vargem Grande do Rio Pardo", "Varginha", "Varjao de MInas", "Varzea da Palma", "Varzelandia", "Vazante", "Verdelandia", "Veredinha", "Verissimo", "Vermelho Novo", "Vespasiano", "Vicosa", "Vieiras", "Virgem da Lapa", "Virginia", "Virginopolis", "Virgolandia", "Visconde do Rio Branco", "Volta Grande", "Wenceslau Braz" }));
        jCBCidade.setEnabled(false);
        jCBCidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jCBCidadeKeyTyped(evt);
            }
        });

        jLabel3.setText("Cidade");
        jLabel3.setToolTipText("Campo obrigat√≥rio");

        jLabel9.setText("N√∫mero");

        jLabel8.setText("Logradouro");
        jLabel8.setToolTipText("Campo obrigat√≥rio");

        txtLogradouro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtLogradouro.setEnabled(false);
        txtLogradouro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLogradouroKeyTyped(evt);
            }
        });

        txtNumero.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNumero.setEnabled(false);
        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroKeyTyped(evt);
            }
        });

        jLabel11.setText("Complemento");

        txtComplemento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtComplemento.setToolTipText("Dica: Seeds Pr√©dio 1");
        txtComplemento.setEnabled(false);
        txtComplemento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtComplementoKeyTyped(evt);
            }
        });

        jLabel13.setText("CEP");

        try {
            txtCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCep.setEnabled(false);
        txtCep.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jCBSituacao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jCBSituacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ativo", "Inativo" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCBSituacao, 0, 56, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCep))
                    .addComponent(txtLogradouro)
                    .addComponent(jCBCidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13)
                        .addComponent(txtCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtLogradouro)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jBSalvar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jBSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/entrar.png"))); // NOI18N
        jBSalvar.setText("Salvar");
        jBSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBSalvar.setEnabled(false);
        jBSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarActionPerformed(evt);
            }
        });

        JBIncluir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        JBIncluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/Novo.png"))); // NOI18N
        JBIncluir.setText("Incluir");
        JBIncluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        JBIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBIncluirActionPerformed(evt);
            }
        });

        JBAlterar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        JBAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/view-refresh.png"))); // NOI18N
        JBAlterar.setText("Alterar");
        JBAlterar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        JBAlterar.setEnabled(false);
        JBAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBAlterarActionPerformed(evt);
            }
        });

        JBExcluir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        JBExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/cancelar.png"))); // NOI18N
        JBExcluir.setText("Excluir");
        JBExcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        JBExcluir.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        JBExcluir.setEnabled(false);
        JBExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        JBExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBExcluirActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jLabel4.setText("C√≥digo");

        txtCodigo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodigoFocusLost(evt);
            }
        });

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/buscar.png"))); // NOI18N
        jButton11.setToolTipText("Carregar dados do Banco de Dados");
        jButton11.setBorderPainted(false);
        jButton11.setContentAreaFilled(false);
        jButton11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        txtBuscarPeloCode.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtBuscarPeloCode.setToolTipText("Localizar");
        txtBuscarPeloCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarPeloCodeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarPeloCodeKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtBuscarPeloCode, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtBuscarPeloCode)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCodigo)
                        .addComponent(jLabel4))
                    .addComponent(jButton11, 0, 0, Short.MAX_VALUE))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jBSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JBIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JBAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JBExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {JBAlterar, JBExcluir, JBIncluir, jBSalvar});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(JBIncluir, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jBSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JBAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JBExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {JBAlterar, JBExcluir, JBIncluir, jBSalvar});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarActionPerformed
        try {
            LocalidadeDAO dao = new LocalidadeDAO();
            Localidade localidade = new Localidade();
            localidade = dao.carregarLocalidadePeloCodigo(txtCodigo.getText());
            if (localidade.getBairro().equals("nulo")) {
                if (txtCodigo.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Campo C√≥digo tem que ser informado!\n"
                            + "Clique Incluir",
                            "Aten√ß√£o!", JOptionPane.WARNING_MESSAGE);
                } else {
                    if (jCBCidade.getSelectedItem().toString().equals("")) {
                        JOptionPane.showMessageDialog(rootPane, "Campo Cidade tem que ser informado!",
                                "Aten√ß√£o!", JOptionPane.WARNING_MESSAGE);
                    } else {
                        if (txtBairro.getText().equals("")) {
                            JOptionPane.showMessageDialog(rootPane, "Campo Bairro tem que ser informado!",
                                    "Aten√ß√£o!", JOptionPane.WARNING_MESSAGE);
                        } else {
                            if (txtLogradouro.getText().equals("")) {
                                JOptionPane.showMessageDialog(rootPane, "Campo Logradouro tem que ser informado!",
                                        "Aten√ß√£o!", JOptionPane.WARNING_MESSAGE);
                            } else {
                                localidade.setCodigo(Integer.parseInt(txtCodigo.getText()));
                                localidade.setBairro(txtBairro.getText().trim());
                                localidade.setCidade(jCBCidade.getSelectedItem().toString().trim());
                                localidade.setEndereco(txtLogradouro.getText().trim());
                                localidade.setNumero(txtNumero.getText().trim());
                                localidade.setComplemento(txtComplemento.getText().trim());
                                localidade.setCep(txtCep.getText());
                                localidade.setSituacao(jCBSituacao.getSelectedItem().toString().trim());
                                try {
                                    dao.adicionarLocalidade(localidade);
                                    JOptionPane.showMessageDialog(null, "Cadastro efetuado com sucesso!\n"
                                            + "Agora os dados dos registros ser√£o anexado junto com o c√≥digo da unidade, \n"
                                            + "isso vem a facilitar e simplificar os dados gerados, principalmentes os registros \n"
                                            + "dos alunos.", "Seeds", JOptionPane.INFORMATION_MESSAGE);
                                    txtCodigo.setText("");
                                    txtBairro.setText("");
                                    jCBCidade.setSelectedItem("Montes Claros");
                                    txtLogradouro.setText("");
                                    txtNumero.setText("");
                                    txtComplemento.setText("");
                                    txtCep.setText("");
                                    jCBSituacao.setSelectedItem("Ativo");
                                } catch (BancoException e) {
                                    e.printStackTrace();
                                }
                            }
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "A localidade informado consta no banco!");

            }
            localidade = null;
            dao.desconectar();
        } catch (BancoException e) {
            e.printStackTrace();
        }
}//GEN-LAST:event_jBSalvarActionPerformed

    private void txtBairroMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBairroMouseReleased
    }//GEN-LAST:event_txtBairroMouseReleased

    private void JBExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBExcluirActionPerformed
        String verificacodigo = txtCodigo.getText();
        if (verificacodigo.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Campo C√≥digo n√£o pode ser vazio\n"
                    + "Clique Incluir");
        } else {
            jCBSituacao.setSelectedItem("Intivo");
            Localidade localidade = new Localidade();
            localidade.setCodigo(Integer.parseInt(txtCodigo.getText()));
            localidade.setBairro(txtBairro.getText().trim());
            localidade.setCidade(jCBCidade.getSelectedItem().toString().trim());
            localidade.setEndereco(txtLogradouro.getText().trim());
            localidade.setNumero(txtNumero.getText().trim());
            localidade.setComplemento(txtComplemento.getText().trim());
            localidade.setCep(txtCep.getText());
            localidade.setSituacao("Inativo");
            try {
                LocalidadeDAO dao = new LocalidadeDAO();
                dao.atualizaDados(localidade);
                JOptionPane.showMessageDialog(null, "Efetuado com sucesso!");
                localidade = null;
                dao.desconectar();
            } catch (BancoException e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_JBExcluirActionPerformed

    private void JBAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBAlterarActionPerformed
        jCBSituacao.setSelectedItem("Ativo");
        String verificacodigo = txtCodigo.getText();
        if (verificacodigo.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Campo C√≥digo n√£o pode ser vazio\n"
                    + "Clique Incluir");
        } else {
            String verificacid = jCBCidade.getSelectedItem().toString();
            if (verificacid.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Campo Cidade tem que ser informado!",
                        "Aten√ß√£o!", JOptionPane.INFORMATION_MESSAGE);
            } else {
                String verificabai = txtBairro.getText();
                if (verificabai.equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Campo Bairro tem que ser informado!",
                            "Aten√ß√£o!", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    String verificalog = txtLogradouro.getText();
                    if (verificalog.equals("")) {
                        JOptionPane.showMessageDialog(rootPane, "Campo Logradouro tem que ser informado!",
                                "Aten√ß√£o!", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        String verificanumero = txtNumero.getText();
                        if (verificanumero.equals("")) {
                            JOptionPane.showMessageDialog(rootPane, "Campo N√∫mero tem que ser informado!",
                                    "Aten√ß√£o!", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            Localidade localidade = new Localidade();
                            localidade.setCodigo(Integer.parseInt(txtCodigo.getText()));
                            localidade.setCodigo(Integer.parseInt(txtCodigo.getText()));
                            localidade.setBairro(txtBairro.getText().trim());
                            localidade.setCidade(jCBCidade.getSelectedItem().toString().trim());
                            localidade.setEndereco(txtLogradouro.getText().trim());
                            localidade.setNumero(txtNumero.getText().trim());
                            localidade.setComplemento(txtComplemento.getText().trim());
                            localidade.setCep(txtCep.getText());
                            localidade.setSituacao(jCBSituacao.getSelectedItem().toString());

                            try {
                                LocalidadeDAO dao = new LocalidadeDAO();
                                dao.atualizaDados(localidade);
                                JOptionPane.showMessageDialog(null, "Efetuado com sucesso!");
                                localidade = null;
                                dao.desconectar();
                            } catch (BancoException e) {
                                e.printStackTrace();
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_JBAlterarActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        String codigo = txtBuscarPeloCode.getText();
        Localidade localidade = new Localidade();

        try {
            LocalidadeDAO dao = new LocalidadeDAO(); // estou instanciando a conex√£o
            localidade = dao.carregarLocalidadePeloCodigo(codigo);
            if (localidade.getBairro().equals("nulo")) {
                JOptionPane.showMessageDialog(rootPane, "A localidade informado n√£o consta no banco!");
            } else {
                txtBairro.setText(localidade.getBairro());
                jCBCidade.setSelectedItem(localidade.getCidade());
                txtLogradouro.setText(localidade.getEndereco());
                txtNumero.setText(localidade.getNumero());
                txtComplemento.setText(localidade.getComplemento());
                txtCep.setText(localidade.getCep());
                jCBCidade.setEnabled(true);
                txtBairro.setEnabled(true);
                txtCep.setEnabled(true);
                txtLogradouro.setEnabled(true);
                txtNumero.setEnabled(true);
                txtComplemento.setEnabled(true);
            }
            localidade = null;
            dao.desconectar();
        } catch (BancoException e) {
            e.printStackTrace();
        }

}//GEN-LAST:event_jButton11ActionPerformed

    private void JBIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBIncluirActionPerformed
        JBExcluir.setEnabled(false);
        JBAlterar.setEnabled(false);
        jBSalvar.setEnabled(true);
        jCBCidade.setSelectedItem("Montes Claros");
        txtBairro.setText("");
        txtCep.setText("");
        txtLogradouro.setText("");
        txtNumero.setText("");
        txtComplemento.setText("");
        jCBCidade.setEnabled(true);
        txtBairro.setEnabled(true);
        txtCep.setEnabled(true);
        txtLogradouro.setEnabled(true);
        txtNumero.setEnabled(true);
        txtComplemento.setEnabled(true);

        try {
            LocalidadeDAO dao = new LocalidadeDAO();
            txtCodigo.setText(String.valueOf(dao.gerarCodigoLocalidade()));
            dao.desconectar();
        } catch (BancoException f) {
            f.printStackTrace();
        }
    }//GEN-LAST:event_JBIncluirActionPerformed

    private void txtBuscarPeloCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarPeloCodeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            this.dispose();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            String codigo = txtBuscarPeloCode.getText();
            Localidade localidade = new Localidade();

            try {
                LocalidadeDAO dao = new LocalidadeDAO(); // estou instanciando a conex√£o
                localidade = dao.carregarLocalidadePeloCodigo(codigo);
                if (localidade.getBairro().equals("nulo")) {
                    JOptionPane.showMessageDialog(rootPane, "A localidade informado n√£o consta no banco!");
                } else {
                    jCBSituacao.setEnabled(true);
                    JBExcluir.setEnabled(false);
                    JBAlterar.setEnabled(true);
                    txtCodigo.setText(String.valueOf(localidade.getCodigo()));
                    txtBairro.setText(localidade.getBairro());
                    jCBCidade.setSelectedItem(localidade.getCidade());
                    txtLogradouro.setText(localidade.getEndereco());
                    txtNumero.setText(localidade.getNumero());
                    txtComplemento.setText(localidade.getComplemento());
                    txtCep.setText(localidade.getCep());
                    jCBSituacao.setSelectedItem(localidade.getSituacao());
                    jCBCidade.setEnabled(true);
                    txtBairro.setEnabled(true);
                    txtCep.setEnabled(true);
                    txtLogradouro.setEnabled(true);
                    txtNumero.setEnabled(true);
                    txtComplemento.setEnabled(true);

                }
                localidade = null;
                dao.desconectar();
            } catch (BancoException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_txtBuscarPeloCodeKeyPressed

private void txtBuscarPeloCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarPeloCodeKeyTyped
}//GEN-LAST:event_txtBuscarPeloCodeKeyTyped

private void jCBCidadeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCBCidadeKeyTyped
}//GEN-LAST:event_jCBCidadeKeyTyped

private void txtBairroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBairroKeyTyped
}//GEN-LAST:event_txtBairroKeyTyped

private void txtLogradouroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLogradouroKeyTyped
}//GEN-LAST:event_txtLogradouroKeyTyped

private void txtNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyTyped
}//GEN-LAST:event_txtNumeroKeyTyped

private void txtComplementoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtComplementoKeyTyped
}//GEN-LAST:event_txtComplementoKeyTyped

    private void txtCodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodigoFocusLost
        if (txtCodigo.getText().equals("0")) {
            try {
                LocalidadeDAO dao = new LocalidadeDAO();
                txtCodigo.setText(String.valueOf(dao.gerarCodigoLocalidade()));
                dao.desconectar();
            } catch (BancoException ex) {
                Logger.getLogger(Localidades.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_txtCodigoFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Localidades().setVisible(true);
                } catch (BancoException ex) {
                    Logger.getLogger(Localidades.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBAlterar;
    private javax.swing.JButton JBExcluir;
    private javax.swing.JButton JBIncluir;
    private javax.swing.JButton jBSalvar;
    private javax.swing.JButton jButton11;
    private javax.swing.JComboBox jCBCidade;
    private javax.swing.JComboBox jCBSituacao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtBuscarPeloCode;
    private javax.swing.JFormattedTextField txtCep;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtComplemento;
    private javax.swing.JTextField txtLogradouro;
    private javax.swing.JTextField txtNumero;
    // End of variables declaration//GEN-END:variables
}
